{
	"env": { "browser": true, "node": true, "es2024": true },
	"parser": "@typescript-eslint/parser",
	"parserOptions": { "ecmaVersion": "latest", "sourceType": "module", "project": ["./tsconfig.json", "./client/tsconfig.client.json", "./server/tsconfig.server.json"] },
	"ignorePatterns": ["build"],
	"plugins": ["@typescript-eslint", "unicorn", "sonarjs"],
	"extends": ["eslint:recommended", "plugin:@typescript-eslint/recommended", "plugin:de-morgan/recommended-legacy"],
	"rules": {
		"indent": ["error", "tab", { "SwitchCase": 1 }],
		"quotes": ["error", "double"],
		"linebreak-style": "off",
		"space-before-blocks": "error",
		"space-before-function-paren": ["error", { "anonymous": "never", "named": "never", "asyncArrow": "always" }],
		"space-in-parens": "error",
		"key-spacing": ["error", { "mode": "strict" }],
		"comma-spacing": "error",
		"block-spacing": ["error", "always"],
		"object-curly-spacing": ["error", "always"],
		"max-classes-per-file": ["error", { "max": 1 }],
		"max-statements-per-line": ["off", { "max": 1 }],
		"one-var-declaration-per-line": ["error", "always"],
		"multiline-ternary": ["error", "never"],
		"object-shorthand": "error",
		"default-param-last": "error",
		"prefer-template": "error",
		"prefer-object-spread": "error",
		"prefer-rest-params": "error",
		"no-new-wrappers": "error",
		"no-async-promise-executor": "off",
		"no-else-return": "error",
		"no-multiple-empty-lines": ["error", { "max": 1, "maxEOF": 1 }],
		"no-extra-semi": "error",
		"no-lonely-if": "error",
		"no-negated-condition": "error",
		"no-var": "error",
		"no-trailing-spaces": ["error", { "skipBlankLines": true }],
		"no-new-object": "error",
		"no-array-constructor": "error",
		"no-nested-ternary": "error",
		"no-unneeded-ternary": "error",
		"no-useless-constructor": "error",
		"no-useless-escape": "error",
		"no-iterator": "error",
		"no-multi-spaces": "error",
		"no-irregular-whitespace": "error",
		"no-prototype-builtins": "error",
		"no-constant-condition": "off",
		"no-void": "error",
		"implicit-arrow-linebreak": ["error", "beside"],
		"no-restricted-imports": ["error", { "patterns": [{ "group": ["../*", "..", ".", "!@/*"], "message": "Relative parent imports are not allowed, use '@/*' alias instead" }] }],
		"no-restricted-syntax": [
			"error",
			{ "selector": "ForInStatement", "message": "for...in loops are not allowed, use Misc.getKeys(), Object.values() or Object.entries() with array.forEach() instead" },
			{ "selector": "MethodDefinition[kind='set']", "message": "Property setters are not allowed" },
			{ "selector": "MethodDefinition[kind='get']", "message": "Property getters are not allowed" },
			{ "selector": "ExportNamedDeclaration[declaration.type='ClassDeclaration']", "message": "Use default export for classes instead of named export." }
		],
		"@typescript-eslint/no-explicit-any": "off",
		"@typescript-eslint/no-unused-vars": "warn",
		"@typescript-eslint/no-this-alias": "off",
		"@typescript-eslint/no-array-constructor": "off",
		"@typescript-eslint/no-inferrable-types": "error",
		"@typescript-eslint/array-type": ["error", { "default": "array" }],
		"@typescript-eslint/consistent-indexed-object-style": ["error", "record"],
		"@typescript-eslint/member-delimiter-style": "error",
		"@typescript-eslint/no-confusing-non-null-assertion": "error",
		"@typescript-eslint/no-unsafe-unary-minus": "error",
		"@typescript-eslint/prefer-find": "error",
		"@typescript-eslint/type-annotation-spacing": "error",
		"@typescript-eslint/explicit-member-accessibility": ["error", { "accessibility": "no-public", "overrides": { "parameterProperties": "explicit" } }],
		"@typescript-eslint/switch-exhaustiveness-check": "error",
		"@typescript-eslint/ban-types": ["error", { "types": { "Function": false }, "extendDefaults": true }],
		"@typescript-eslint/explicit-function-return-type": "off",
		"@typescript-eslint/no-namespace": "off",
		"unicorn/no-null": "error",
		"unicorn/no-useless-spread": "error",
		"unicorn/no-useless-length-check": "error",
		"unicorn/prefer-negative-index": "error",
		"unicorn/prefer-string-replace-all": "error",
		"unicorn/template-indent": "error",
		"sonarjs/no-all-duplicated-branches": "error",
		"sonarjs/no-identical-conditions": "error",
		"sonarjs/no-identical-expressions": "error",
		"sonarjs/no-ignored-return": "error",
		"sonarjs/no-one-iteration-loop": "error",
		"sonarjs/no-collapsible-if": "error",
		"sonarjs/no-collection-size-mischeck": "error",
		"sonarjs/no-duplicated-branches": "error",
		"sonarjs/no-gratuitous-expressions": "error",
		"sonarjs/no-inverted-boolean-check": "error",
		"sonarjs/no-redundant-boolean": "error",
		"sonarjs/no-same-line-conditional": "error"
	}
}
